name: Deploy with Dockerfile

on:
  push:
    branches:
      - 'feature/**'  # Триггер на push в любую feature-ветку
      - 'develop'
      - 'master'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Получить код из репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установить SSH-ключ
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Шаг 3: Копировать код на сервер
      - name: Copy files to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "mkdir -p ${{ secrets.REMOTE_DIR }}"
          rsync -avz --exclude='.git/' -e "ssh -o StrictHostKeyChecking=no" . ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_DIR }}

      # Шаг 4: Собрать Docker-образ и запустить контейнер с переменными окружения
      - name: Build and run Docker container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
          cd ${{ secrets.REMOTE_DIR }} &&
          docker stop solo-leveling-container || true &&  # Останавливаем контейнер, если он запущен
          docker rm solo-leveling-container || true &&    # Удаляем контейнер, если он существует
          docker build -t solo-leveling . &&
          docker run -d \
           -p 8080:8080 \
           --name solo-leveling-container \
           -e TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
           -e SERVER_HOST=${{ secrets.SERVER_HOST }} \
           solo-leveling
          "

      # Шаг 5: Очистка Docker-образов и контейнеров
      - name: Clean up Docker
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
            docker system prune -f &&  # Удаляет остановленные контейнеры, неиспользуемые сети и образы
            docker image prune -f --filter 'until=24h'  # Удаляет образы старше 24 часов
          "

      # Шаг 6: Удаление REMOTE_DIR после завершения
      - name: Clean up remote directory
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "rm -rf ${{ secrets.REMOTE_DIR }}"
